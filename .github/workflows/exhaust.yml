name: Exhaustive Tests for ICU

env:
  PR_COMMENT_TRIGGER_TEXT: "run exhaustive tests"
  RUN_TESTS: true
  UPDATE_PR: true

on:
  workflow_dispatch:
  issue_comment:
    types: [created, edited]
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  checks: write
  pull-requests: write

jobs:

  # Sets environment variables based on the GitHub event
  gha-setenv:
    runs-on: ubuntu-latest
    steps:
      - name: Set env vars
        run: |
          set_vars() {
            local pr_url="$1"
            local run_tests="$2"
            local update_pr="$3"

            echo "RUN_TESTS=$run_tests" >> $GITHUB_ENV
            echo "UPDATE_PR=$update_pr" >> $GITHUB_ENV

            WORKFLOW_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            echo "WORKFLOW_URL=$WORKFLOW_URL" >> $GITHUB_ENV

            if [ "$update_pr" = "true" ]; then
              echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
              gh api "$pr_url" > pr.json
              PR_NUMBER=$(jq -r '.number' pr.json)
              SHA=$(jq -r '.head.sha' pr.json)
              echo "PR_URL=$pr_url" >> $GITHUB_ENV
              echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
              echo "SHA=$SHA" >> $GITHUB_ENV

              ICU4J_CHECK_ID=$(gh api \
                -X POST \
                -F name='Exhaustive Tests / ICU4J' \
                -F head_sha="$SHA" \
                -F status='in_progress' \
                -F details_url="$WORKFLOW_URL" \
                -F output[title]='Exhaustive Tests' \
                -F output[summary]='Running exhaustive tests for ICU4J' \
                -F output[text]="$WORKFLOW_URL" \
                /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/check-runs \
                -q .id)
              echo "ICU4J_CHECK_ID=$ICU4J_CHECK_ID" >> $GITHUB_ENV

              ICU4C_CHECK_ID=$(gh api \
                -X POST \
                -F name='Exhaustive Tests / ICU4C' \
                -F head_sha="$SHA" \
                -F status='in_progress' \
                -F details_url="$WORKFLOW_URL" \
                -F output[title]='Exhaustive Tests' \
                -F output[summary]='Running exhaustive tests for ICU4C' \
                -F output[text]="$WORKFLOW_URL" \
                /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/check-runs \
                -q .id)
              echo "ICU4C_CHECK_ID=$ICU4C_CHECK_ID" >> $GITHUB_ENV
            fi
          }

          echo "Setting env vars for $GITHUB_EVENT_NAME"
          if [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
            set_vars "" "true" "false"
          elif [[ "$GITHUB_EVENT_NAME" = "issue_comment" && "${{ github.event.comment.body }}" == *"${PR_COMMENT_TRIGGER_TEXT}"* ]]; then
            set_vars "${{ github.event.issue.pull_request.url }}" "true" "true"
          elif [[ "$GITHUB_EVENT_NAME" = "pull_request" && "${{ github.event.pull_request.body }}" == *"${PR_COMMENT_TRIGGER_TEXT}"* ]]; then
            set_vars "${{ github.event.pull_request.url }}" "true" "true"
          else
            echo "Setting env vars for a different event or PR_COMMENT_TRIGGER_TEXT not found in comments. We will be skipping."
            set_vars "" "false" "false"
          fi

          echo "Variable setup done"
          echo $GITHUB_ENV


  # Runs exhaustive tests for ICU4J on Linux
  icu4j-linux:
    needs: gha-setenv
    if: ${{ vars.RUN_TESTS}}
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Build and Exhaustive Tests
        run: |
          echo "Building ICU4J" && cd icu4j && mvn install -DICU.exhaustive=10
        env:
          BUILD: ICU4J
      - name: List failures (if any)
        if: failure()
        run: |
          cd icu4j && cat `find . -name surefire-reports -type d -exec grep -l  -r --include="*.txt" FAILED {} \;`
        timeout-minutes: 2
      - name: Complete the check
        if: always() && ${{ vars.UPDATE_PR }}
        run: |
          STATUS="completed"
          CONCLUSION="success"
          if [ "${{ job.status }}" != "success" ]; then
            CONCLUSION="failure"
          fi
          gh api \
            -X PATCH \
            -F status="$STATUS" \
            -F conclusion="$CONCLUSION" \
            -F details_url="${{ env.WORKFLOW_URL }}" \
            -F output[title]='Exhaustive Tests' \
            -F output[summary]='Completed exhaustive tests for ICU4J' \
            -F details_url="${{ env.WORKFLOW_URL }}" \
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/check-runs/${{ env.ICU4J_CHECK_ID }}


  icu4c-linux-clang:
    needs: gha-setenv
    if: ${{ vars.RUN_TESTS}}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Build
        run: |
          cd icu4c/source && ./runConfigureICU Linux/clang && make -j -l4.5
      - name: Exhaustive Tests
        run: |
          cd icu4c/source && make check-exhaustive
        env:
          CC: clang
          CXX: clang++
      - name: Complete the check
        if: always() && ${{ vars.UPDATE_PR }}
        run: |
          STATUS="completed"
          CONCLUSION="success"
          if [ "${{ job.status }}" != "success" ]; then
            CONCLUSION="failure"
          fi
          gh api \
            -X PATCH \
            -F status="$STATUS" \
            -F conclusion="$CONCLUSION" \
            -F details_url="${{ env.WORKFLOW_URL }}" \
            -F output[title]='Exhaustive Tests' \
            -F output[summary]='Completed exhaustive tests for ICU4C' \
            -F output[text]=${{ env.WORKFLOW_URL }} \
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/check-runs/${{ env.ICU4C_CHECK_ID }}
