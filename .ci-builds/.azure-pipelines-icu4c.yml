# Azure Pipelines (VSTS) configuration for CI builds for ICU.

trigger:
  # batch=true to reduce number of concurrent runs on the same branch:
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/yaml-schema/trigger?view=azure-pipelines#properties
  # potential future feature to supersede batch=true:
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/process/stages?view=azure-devops&tabs=yaml#specify-queuing-policies
  batch: true
  branches:
    include:
    - main
    - maint/maint-*
  paths:
    include:
    - icu4c
    - .ci-builds/.azure-pipelines-icu4c.yml

pr:
  branches:
    include:
    - main
    - maint/maint-*
  paths:
    include:
    - icu4c
    - .ci-builds/.azure-pipelines-icu4c.yml


variables:
  MAVEN_ARGS: '--show-version --no-transfer-progress'

jobs:
#-------------------------------------------------------------------------
# ICU4C_Clang_Ubuntu_2204
# Moved to GHA: .github\workflows\icu4c.yml 
# Job : clang-release-build-and-test:
# The build job was already present two testing steps are added "Test C Default locale" and "Test C.UTF-8 Default locale"
#-------------------------------------------------------------------------
# ICU4C_Clang_Ubuntu_DataFilter_2204
# Moved to GHA: .github\workflows\icu4c.yml 
# Job : clang-datafilter:
#-------------------------------------------------------------------------
# ICU4C_Clang_Cpp17_Debug_Ubuntu_2204
# Moved to GHA: .github\workflows\icu4c.yml 
# Job : clang-cpp17:
#-------------------------------------------------------------------------
- job: ICU4C_GCC_Ubuntu_2004
  displayName: 'C: Linux GCC (Ubuntu 20.04)'
  timeoutInMinutes: 30
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - script: |
        cd icu4c/source && ./runConfigureICU Linux && make -j -l2.5 check
      displayName: 'Build and Test'
      env:
        CC: gcc
        CXX: g++
#-------------------------------------------------------------------------
# ICU4C_GCC11_Cpp20_Ubuntu_2004
# Moved to GHA: .github\workflows\icu4c.yml 
# Job : gcc11-cpp20:
#-------------------------------------------------------------------------
- job: ICU4C_Clang_Ubuntu_2004_LANG
# Moved to GHA: .github\workflows\icu4c.yml 
# Job : clang-lang-with-extn-tags:
#-------------------------------------------------------------------------
- job: ICU4C_Clang16_Ubuntu_2004_WarningsAsErrors
# Moved to GHA: .github\workflows\icu4c.yml 
# Job : clang16-cpp20-warning-as-errors
#-------------------------------------------------------------------------
- job: ICU4C_Clang16_Cpp20_Ubuntu_2004
# Moved to GHA: .github\workflows\icu4c.yml 
# Job : clang16-cpp20-warning-as-errors
#-------------------------------------------------------------------------
- job: ICU4C_Clang16_Cpp20_libcpp_Ubuntu_2004
# Moved to GHA: .github\workflows\icu4c.yml 
# Job : clang16-cpp20-warning-as-errors
#-------------------------------------------------------------------------
# VS 2022 Builds
#-------------------------------------------------------------------------
- job: ICU4C_MSVC_x64_Release_Distrelease
  displayName: 'C: MSVC 64-bit Release (VS 2022) + Distrelease'
  timeoutInMinutes: 30
  pool:
    vmImage: 'windows-2022'
    demands: 
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: x64
        configuration: Release
    - task: BatchScript@1
      displayName: 'Run Tests (icucheck.bat)'
      inputs:
        filename: icu4c/source/allinone/icucheck.bat
        arguments: 'x64 Release'
    - task: PowerShell@2
      displayName: 'PowerShell: Distrelease script (x64)'
      inputs:
        targetType: filePath
        filePath: 'icu4c/packaging/distrelease.ps1'
        arguments: '-arch x64'
        workingDirectory: icu4c
    - task: PublishBuildArtifacts@1
      displayName: 'Publish x64 Artifacts: icu-windows.zip'
      inputs:
        PathtoPublish: 'icu4c/source/dist/icu-windows.zip'
        ArtifactName: '$(Build.BuildNumber)_ICU4C_MSVC_x64_Release'
#-------------------------------------------------------------------------
- job: ICU4C_MSVC_x64_Release_DataFilter
  displayName: 'C: MSVC 64-bit Release DataFilter (VS 2022)'
  timeoutInMinutes: 30
  pool:
    vmImage: 'windows-2022'
    demands: 
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - powershell: |
        $filterPath = $Env:BUILD_SOURCESDIRECTORY + "\.ci-builds\data-filter.json"
        $vstsCommandString = "vso[task.setvariable variable=ICU_DATA_FILTER_FILE]" + $filterPath
        Write-Host "##$vstsCommandString"
    - task: VSBuild@1
      displayName: 'Build Solution with Data Filter'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: x64
        configuration: Release
        msbuildArgs: '/p:SkipUWP=true'
#-------------------------------------------------------------------------
- job: ICU4C_MSVC_x86_Release_Distrelease
  displayName: 'C: MSVC 32-bit Release (VS 2022) + Distrelease'
  timeoutInMinutes: 30
  pool:
    vmImage: 'windows-2022'
    demands: 
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: Win32
        configuration: Release
    - task: BatchScript@1
      displayName: 'Run Tests (icucheck.bat)'
      inputs:
        filename: icu4c/source/allinone/icucheck.bat
        arguments: 'x86 Release'
    - task: PowerShell@2
      displayName: 'PowerShell: Distrelease script (x86)'
      inputs:
        targetType: filePath
        filePath: 'icu4c/packaging/distrelease.ps1'
        arguments: '-arch x86'
        workingDirectory: icu4c
    - task: PublishBuildArtifacts@1
      displayName: 'Publish x86 Artifacts: icu-windows.zip'
      inputs:
        PathtoPublish: 'icu4c/source/dist/icu-windows.zip'
        ArtifactName: '$(Build.BuildNumber)_ICU4C_MSVC_x86_Release'
#-------------------------------------------------------------------------
- job: ICU4C_MSVC_x64_ARM32_Release
  displayName: 'C: MSVC x64 ARM32 Release (VS 2022)'
  timeoutInMinutes: 35
  pool:
    vmImage: 'windows-2022'
    demands:
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: x64
        configuration: Release
    - task: VSBuild@1
      displayName: 'Build ARM32'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: ARM
        configuration: Release
#-------------------------------------------------------------------------
- job: ICU4C_MSVC_x64_ARM64_Release_Distrelease
  displayName: 'C: MSVC x64 ARM64 Release (VS 2022) + Distrelease'
  timeoutInMinutes: 35
  pool:
    vmImage: 'windows-2022'
    demands:
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: x64
        configuration: Release
    - task: VSBuild@1
      displayName: 'Build ARM64'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: ARM64
        configuration: Release
    - task: PowerShell@2
      displayName: 'PowerShell: Distrelease script (ARM64)'
      inputs:
        targetType: filePath
        filePath: 'icu4c/packaging/distrelease.ps1'
        arguments: '-arch ARM64'
        workingDirectory: icu4c
    - task: PublishBuildArtifacts@1
      displayName: 'Publish ARM64 Artifacts: icu-windows.zip'
      inputs:
        PathtoPublish: 'icu4c/source/dist/icu-windows.zip'
        ArtifactName: '$(Build.BuildNumber)_ICU4C_MSVC_ARM64_Release'
#-------------------------------------------------------------------------
- job: ICU4C_MSVC_x64_Debug
  displayName: 'C: MSVC x64 Debug (VS 2022)'
  timeoutInMinutes: 60
  pool:
    vmImage: 'windows-2022'
    demands: 
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: x64
        configuration: Debug
    - task: BatchScript@1
      displayName: 'Run x64 Debug Tests (icucheck.bat)'
      inputs:
        filename: icu4c/source/allinone/icucheck.bat
        arguments: 'x64 Debug'
#-------------------------------------------------------------------------
- job: ICU4C_MSVC_ARM64_Debug
  displayName: 'C: MSVC ARM64 Debug (VS 2022)'
  timeoutInMinutes: 35
  pool:
    vmImage: 'windows-2022'
    demands: 
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: x64
        configuration: Debug
    - task: VSBuild@1
      displayName: 'Build ARM64 Debug'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: ARM64
        configuration: Debug
#-------------------------------------------------------------------------
# There is no /std:c++20 yet, so use c++latest as that includes many of
# the C++20 compiler and library changes.
- job: ICU4C_MSVC_x64_Release_CppLatest
  displayName: 'C: MSVC 64-bit Release (VS 2022) /std:c++latest'
  timeoutInMinutes: 30
  pool:
    vmImage: 'windows-2022'
    demands: 
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: x64
        configuration: Release
        msbuildArgs: '/p:LanguageStandard="stdcpplatest"'
    - task: BatchScript@1
      displayName: 'Run Tests (icucheck.bat)'
      inputs:
        filename: icu4c/source/allinone/icucheck.bat
        arguments: 'x64 Release'
#-------------------------------------------------------------------------
# VS 2019 Builds
#-------------------------------------------------------------------------
- job: ICU4C_MSVC_x64_Release_VS2019
  displayName: 'C: MSVC 64-bit Release (VS 2019)'
  timeoutInMinutes: 30
  pool:
    vmImage: 'windows-2019'
    demands:
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: x64
        configuration: Release
    - task: BatchScript@1
      displayName: 'Run Tests (icucheck.bat)'
      inputs:
        filename: icu4c/source/allinone/icucheck.bat
        arguments: 'x64 Release'
#-------------------------------------------------------------------------
- job: ICU4C_MSVC_x86_Debug_VS2019
  displayName: 'C: MSVC 32-bit Debug (VS 2019)'
  timeoutInMinutes: 90
  pool:
    vmImage: 'windows-2019'
    demands: 
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: Win32
        configuration: Debug
    - task: BatchScript@1
      displayName: 'Run Tests (icucheck.bat)'
      inputs:
        filename: icu4c/source/allinone/icucheck.bat
        arguments: 'x86 Debug'
#-------------------------------------------------------------------------
- job: ICU4C_MSYS2_GCC_x86_64_Release
  displayName: 'C: MSYS2 GCC x86_64 Release'
  timeoutInMinutes: 45
  pool:
    vmImage: 'windows-2019'
    demands:
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - script: |
       choco install -y msys2
       rem refreshenv
      displayName: 'Install MSYS2'
    - script: |
       c:\tools\msys64\usr\bin\bash.exe -lc "echo 'Hello World' && uname -a"
       c:\tools\msys64\usr\bin\bash.exe -lc "pacman --noconfirm -S mingw-w64-x86_64-toolchain"
       c:\tools\msys64\usr\bin\bash.exe -lc "pacman --noconfirm -S make"
       exit
      displayName: 'Install mingw-w64-x86_64-toolchain'
    - script: |
       set MSYSTEM=MINGW64
       c:\tools\msys64\usr\bin\bash.exe -lc "cd $BUILD_SOURCESDIRECTORY && cd icu4c/source && ./runConfigureICU MinGW --prefix='/tmp/build-icu' && make -j -l2.5 check"
      displayName: 'Build and Test'
    - script: |
       set MSYSTEM=MINGW64
       c:\tools\msys64\usr\bin\bash.exe -lc "cd $BUILD_SOURCESDIRECTORY && cd icu4c/source && make install && cd /tmp/build-icu && echo 'Recursive ls' && ls -lR"
      displayName: 'make install'
    - script: |
       set MSYSTEM=MINGW64
       c:\tools\msys64\usr\bin\bash.exe -lc "echo 'Run icuinfo from MSYS shell' && cd /tmp/build-icu/bin && ./icuinfo.exe"
       echo 'Run icuinfo from CMD shell' && cd /d C:\tools\msys64\tmp\build-icu\bin && set PATH=C:\tools\msys64\mingw64\bin;%PATH% && icuinfo.exe"
      displayName: 'run icuinfo'
#-------------------------------------------------------------------------
- job: ICU4C_Clang_MacOS_WarningsAsErrors
  displayName: 'C: macOS(Latest) Clang WarningsAsErrors'
  timeoutInMinutes: 30
  pool:
    vmImage: 'macOS-latest'
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - script: |
        export CPPFLAGS="-Werror -Wall -Wextra -Wextra-semi -Wundef -Wnon-virtual-dtor -Wctad-maybe-unsupported" && cd icu4c/source && ./runConfigureICU MacOSX && make -j -l2.5 check
      displayName: 'Build and Test (WarningsAsErrors)'
      env:
        CC: clang
        CXX: clang++
#-------------------------------------------------------------------------
- job: ICU4C_icuexportdata_Ubuntu_2204
  displayName: 'C: Create Artifacts from icuexportdata'
  timeoutInMinutes: 30
  pool:
    vmImage: 'ubuntu-22.04'
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - script: |
        cd icu4c/source && ./runConfigureICU Linux && make -j -l2.5
      displayName: 'Build'
      env:
        CC: clang
        CXX: clang++
    - script: |
        cd icu4c/source
        mkdir -p icuexportdata/uprops/fast
        ./bin/icuexportdata --mode uprops --index --copyright --verbose --destdir icuexportdata/uprops/fast --trie-type fast --all
        mkdir -p icuexportdata/uprops/small
        ./bin/icuexportdata --mode uprops --index --copyright --verbose --destdir icuexportdata/uprops/small --trie-type small --all
      displayName: 'Build property data files'
      env:
        LD_LIBRARY_PATH: lib
    - script: |
        cd icu4c/source
        mkdir -p icuexportdata/norm/fast
        ./bin/icuexportdata --mode norm --index --copyright --verbose --destdir icuexportdata/norm/fast --trie-type fast --all
        mkdir -p icuexportdata/norm/small
        ./bin/icuexportdata --mode norm --index --copyright --verbose --destdir icuexportdata/norm/small --trie-type small --all
      displayName: 'Build normalization data files'
      env:
        LD_LIBRARY_PATH: lib
    - script: |
        cd icu4c/source
        mkdir -p icuexportdata/ucase/fast
        ./bin/icuexportdata --mode ucase --index --copyright --verbose --destdir icuexportdata/ucase/fast --trie-type fast --all
        mkdir -p icuexportdata/ucase/small
        ./bin/icuexportdata --mode ucase --index --copyright --verbose --destdir icuexportdata/ucase/small --trie-type small --all
      displayName: 'Build case data files'
      env:
        LD_LIBRARY_PATH: lib
    - script: |
        cd icu4c/source
        FILES=`ls data/coll "*.txt"` 
        mkdir -p icuexportdata/collation/unihan
        ./bin/genrb -X -s data/coll/ --ucadata data/in/coll/ucadata-unihan-icu4x.icu -d icuexportdata/collation/unihan $FILES
        rm icuexportdata/collation/unihan/*.res
        mkdir -p icuexportdata/collation/implicithan
        ./bin/genrb -X -s data/coll/ --ucadata data/in/coll/ucadata-implicithan-icu4x.icu -d icuexportdata/collation/implicithan $FILES
        rm icuexportdata/collation/implicithan/*.res
      displayName: 'Build collation data files'
      env:
        LD_LIBRARY_PATH: lib
    - script: |
        cd icu4c/source
        mkdir -p icuexportdata/segmenter/dictionary
        for FILE in `ls data/brkitr/dictionaries`
        do
          ./bin/gendict --uchars --toml data/brkitr/dictionaries/$FILE icuexportdata/segmenter/dictionary/`basename $FILE .txt`.toml
        done
      displayName: 'Build segmenter dictionary files'
      env:
        LD_LIBRARY_PATH: lib
    - task: ArchiveFiles@2
      displayName: 'Zip'
      inputs:
        rootFolderOrFile: 'icu4c/source/icuexportdata' 
        includeRootFolder: false 
        archiveFile: 'icuexportdata_tag-goes-here.zip' 
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: 'icuexportdata_tag-goes-here.zip'
        ArtifactName: 'icuexportdata_output'
#-------------------------------------------------------------------------
# Builds MSVC with cpp exceptions turned off
- job: ICU4C_MSVC_x64_Release_NoExceptions
  displayName: 'C: MSVC 64-bit Release No Exceptions'
  timeoutInMinutes: 30
  pool:
    vmImage: 'windows-2022'
    demands: 
      - msbuild
      - visualstudio
      - Cmd
  steps:
    - checkout: self
      lfs: true
      fetchDepth: 10
    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: icu4c/source/allinone/allinone.sln
        platform: x64
        configuration: Release
        msbuildArgs: '/p:_HAS_EXCEPTIONS=0'
    - task: BatchScript@1
      displayName: 'Run Tests (icucheck.bat)'
      inputs:
        filename: icu4c/source/allinone/icucheck.bat
        arguments: 'x64 Release'
